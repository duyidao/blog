import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.2ee92742.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"project/caixun/elk/blob.md","filePath":"project/caixun/elk/blob.md","lastUpdated":null}'),p={name:"project/caixun/elk/blob.md"},o=l(`<p>后端返回二进制流文件，前端需要通过特殊方法把二进制流文件转为 json 格式。方法如下：</p><ol><li>通过 axios 发送请求，设置基准路径、请求参数、响应数据类型为 blob ，请求头携带 token 等。</li><li>请求成功后回调函数中执行以下操作： <ul><li>调用 new Blob() 方法，把参数传递给该方法，设置 type 类型为 {type: &#39;application/vnd.openxmlformats-officedocument.wordprocessingml.document;charset=utf-8&#39;} 。</li><li>创建一个新的对象 URL ，该对象 URL 可以代表某一个指定的 file 对象或者 bolb 对象。用于在浏览器上预览本地的图片或者视频。</li><li>创建 a 标签，使用其 download 方法，这样就能下载文件而不是预览，再设置下载文件名。</li><li>下载完毕后移出元素和方法。</li></ul></li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">axios.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">( baseUrl </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;后端接口&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">  params: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    id: row.id</span><span style="color:#6A737D;">//这里是参数</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  headers: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    authentication: </span><span style="color:#9ECBFF;">&#39;token&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  responseType: </span><span style="color:#9ECBFF;">&#39;blob&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#6A737D;">//响应类型为流</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">axios.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">( baseUrl </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;后端接口&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">  params: {</span></span>
<span class="line"><span style="color:#24292E;">    id: row.id</span><span style="color:#6A737D;">//这里是参数</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  headers: {</span></span>
<span class="line"><span style="color:#24292E;">    authentication: </span><span style="color:#032F62;">&#39;token&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  responseType: </span><span style="color:#032F62;">&#39;blob&#39;</span><span style="color:#24292E;">,</span><span style="color:#6A737D;">//响应类型为流</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>总体代码如下所示：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">downLoad</span><span style="color:#E1E4E8;">(row) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  axios.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">( baseUrl </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/license/down/auth/code&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    params: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      id: row.id</span><span style="color:#6A737D;">//这里是参数</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    headers: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      authentication: </span><span style="color:#9ECBFF;">&#39;2913d3e9-e732-4a1e-a9cc-68cf007dae72&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    responseType: </span><span style="color:#9ECBFF;">&#39;blob&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#6A737D;">//响应类型为流</span></span>
<span class="line"><span style="color:#E1E4E8;">  }).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">resp</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(resp);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(resp) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> blob </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Blob</span><span style="color:#E1E4E8;">([resp.data], {type: </span><span style="color:#9ECBFF;">&#39;application/vnd.openxmlformats-officedocument.wordprocessingml.document;charset=utf-8&#39;</span><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> window.</span><span style="color:#79B8FF;">URL</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">createObjectURL</span><span style="color:#E1E4E8;">(blob);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> link </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">createElement</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      link.href </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> url</span></span>
<span class="line"><span style="color:#E1E4E8;">      link.download </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;a.txt&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;下载文件&#39;</span><span style="color:#E1E4E8;">;</span><span style="color:#6A737D;">//下载后文件名</span></span>
<span class="line"><span style="color:#E1E4E8;">      document.body.</span><span style="color:#B392F0;">appendChild</span><span style="color:#E1E4E8;">(link);</span></span>
<span class="line"><span style="color:#E1E4E8;">      link.</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span><span style="color:#6A737D;">//点击下载</span></span>
<span class="line"><span style="color:#E1E4E8;">      link.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">();</span><span style="color:#6A737D;">//下载完成移除元素</span></span>
<span class="line"><span style="color:#E1E4E8;">      window.</span><span style="color:#79B8FF;">URL</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">revokeObjectURL</span><span style="color:#E1E4E8;">(link.href); </span><span style="color:#6A737D;">//用完之后使用URL.revokeObjectURL()释放；</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      Message.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;文件下载失败，请重试！&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }).</span><span style="color:#B392F0;">catch</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Message.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;暂无下载该文件的权限！&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }).</span><span style="color:#B392F0;">finally</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//请求结束回调</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">downLoad</span><span style="color:#24292E;">(row) {</span></span>
<span class="line"><span style="color:#24292E;">  axios.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">( baseUrl </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/license/down/auth/code&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">    params: {</span></span>
<span class="line"><span style="color:#24292E;">      id: row.id</span><span style="color:#6A737D;">//这里是参数</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    headers: {</span></span>
<span class="line"><span style="color:#24292E;">      authentication: </span><span style="color:#032F62;">&#39;2913d3e9-e732-4a1e-a9cc-68cf007dae72&#39;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    responseType: </span><span style="color:#032F62;">&#39;blob&#39;</span><span style="color:#24292E;">,</span><span style="color:#6A737D;">//响应类型为流</span></span>
<span class="line"><span style="color:#24292E;">  }).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">((</span><span style="color:#E36209;">resp</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(resp);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(resp) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> blob </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Blob</span><span style="color:#24292E;">([resp.data], {type: </span><span style="color:#032F62;">&#39;application/vnd.openxmlformats-officedocument.wordprocessingml.document;charset=utf-8&#39;</span><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> window.</span><span style="color:#005CC5;">URL</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">createObjectURL</span><span style="color:#24292E;">(blob);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> link </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">createElement</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      link.href </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> url</span></span>
<span class="line"><span style="color:#24292E;">      link.download </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;a.txt&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;下载文件&#39;</span><span style="color:#24292E;">;</span><span style="color:#6A737D;">//下载后文件名</span></span>
<span class="line"><span style="color:#24292E;">      document.body.</span><span style="color:#6F42C1;">appendChild</span><span style="color:#24292E;">(link);</span></span>
<span class="line"><span style="color:#24292E;">      link.</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span><span style="color:#6A737D;">//点击下载</span></span>
<span class="line"><span style="color:#24292E;">      link.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">();</span><span style="color:#6A737D;">//下载完成移除元素</span></span>
<span class="line"><span style="color:#24292E;">      window.</span><span style="color:#005CC5;">URL</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">revokeObjectURL</span><span style="color:#24292E;">(link.href); </span><span style="color:#6A737D;">//用完之后使用URL.revokeObjectURL()释放；</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      Message.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;文件下载失败，请重试！&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }).</span><span style="color:#6F42C1;">catch</span><span style="color:#24292E;">(</span><span style="color:#E36209;">e</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    Message.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;暂无下载该文件的权限！&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }).</span><span style="color:#6F42C1;">finally</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//请求结束回调</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span></code></pre></div>`,5),e=[o];function c(t,r,E,y,i,d){return n(),a("div",null,e)}const u=s(p,[["render",c]]);export{b as __pageData,u as default};
