import{_ as s,c as i,o as a,V as e}from"./chunks/framework.C7aBxagv.js";const g=JSON.parse('{"title":"移动端大屏端布局适配","description":"","frontmatter":{},"headers":[],"relativePath":"learn/学而时习之/更上一层楼/移动端大屏端布局适配.md","filePath":"learn/学而时习之/更上一层楼/移动端大屏端布局适配.md","lastUpdated":1713867096000}'),t={name:"learn/学而时习之/更上一层楼/移动端大屏端布局适配.md"},n=e(`<h1 id="移动端大屏端布局适配" tabindex="-1">移动端大屏端布局适配 <a class="header-anchor" href="#移动端大屏端布局适配" aria-label="Permalink to &quot;移动端大屏端布局适配&quot;">​</a></h1><h2 id="核心思想" tabindex="-1">核心思想 <a class="header-anchor" href="#核心思想" aria-label="Permalink to &quot;核心思想&quot;">​</a></h2><ol><li>布局更多使用 <code>flex</code> ，尺寸使用 <code>rem</code> 、<code>vw</code> 、<code>vh</code> 为单位</li><li>根据不同屏幕尺寸需要不同布局，采用多个站点切换或者媒体查询使用 <code>css</code></li></ol><h2 id="rem" tabindex="-1">rem <a class="header-anchor" href="#rem" aria-label="Permalink to &quot;rem&quot;">​</a></h2><h3 id="页面尺寸计算" tabindex="-1">页面尺寸计算 <a class="header-anchor" href="#页面尺寸计算" aria-label="Permalink to &quot;页面尺寸计算&quot;">​</a></h3><p>以 HTML 字体大小为 1rem 的大小，HTML 为 16px ，1rem 则为 16px。rem之所以能自适应就是根据屏幕大小用 js 重新计算设置 1rem 的大小。</p><p>计算公式为：页面宽度 除以 设计稿宽度（一般是750）再乘想要设置 1rem 为多少 px （这里取 1rem 为 16px）。</p><p>来到 <code>index.html</code> 或 <code>App.vue</code> 组件，计算 1rem 的大小。步骤如下：</p><ol><li>获取整体页面宽度</li><li>根据比例计算 1rem 的大小</li><li>为整体 HTML 根元素添加字体大小的样式</li><li>绑定页面尺寸修改事件，触发事件后重新计算</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> resizeFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (document.body.clientWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 750</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	document.documentElement.style.fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resizeFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resize&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, resizeFn)</span></span></code></pre></div><p>如果想要给整体项目添加最大宽度，则用页面整体宽度和最大宽度做比较取最小值。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.body.clientWidth, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">750</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 750</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // [!code++]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.documentElement.style.fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fontSize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>现在可以把页面元素样式单位修改为 rem，保存刷新后就可查看效果。</p><h3 id="第三方库使用" tabindex="-1">第三方库使用 <a class="header-anchor" href="#第三方库使用" aria-label="Permalink to &quot;第三方库使用&quot;">​</a></h3>`,14),h=[n];function l(p,k,d,r,o,E){return a(),i("div",null,h)}const y=s(t,[["render",l]]);export{g as __pageData,y as default};
