import{_ as a,o as s,c as e,S as n}from"./chunks/framework.e036d9b7.js";const D=JSON.parse('{"title":"navigateBack 传参","description":"","frontmatter":{},"headers":[],"relativePath":"project/lingsi/crm/navigateBack.md","filePath":"project/lingsi/crm/navigateBack.md","lastUpdated":null}'),t={name:"project/lingsi/crm/navigateBack.md"},l=n(`<h1 id="navigateback-传参" tabindex="-1">navigateBack 传参 <a class="header-anchor" href="#navigateback-传参" aria-label="Permalink to &quot;navigateBack 传参&quot;">​</a></h1><p>根据官方文档显示，wx.navigateBack() 方法是不支持传参的，因此如果需要返回上一页对数据做某种处理时，可以使用 getCurrentPages() 方法。</p><h2 id="getcurrentpages" tabindex="-1">getCurrentPages <a class="header-anchor" href="#getcurrentpages" aria-label="Permalink to &quot;getCurrentPages&quot;">​</a></h2><p>获取当前页面栈。数组中第一个元素为首页，最后一个元素为当前页面。</p><blockquote><p>注意： 不要尝试修改页面栈，会导致路由以及页面状态错误。</p></blockquote><p>不要在 <code>App.onLaunch</code> 的时候调用 <code>etCurrentPages</code>，此时 <code>page</code> 还没有生成。 获取到需要的页面（即上一页）： <code>let prevPage = page[page.length - 2]</code> 此时 <code>prevPage</code> 代表的就是上一页的实例，相当于 <code>this</code> 。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> page </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getCurrentPages</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">//获取当前页面栈</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> prevPage </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> page[page</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">] </span><span style="color:#676E95;font-style:italic;">//代表的就是上一页的实例，相当于this</span></span>
<span class="line"><span style="color:#A6ACCD;">prevPage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setData</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">list</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> []</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">wx</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">navigateBack</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">delta</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>现在就可以对该页面的数据做操作再返回上一页了。</p><blockquote><p>拓展 <a href="https://blog.csdn.net/shadow_zed/article/details/104387841/" target="_blank" rel="noreferrer">getCurrentPages的一些坑点</a></p></blockquote>`,9),p=[l];function o(c,r,i,C,g,A){return s(),e("div",null,p)}const d=a(t,[["render",o]]);export{D as __pageData,d as default};
