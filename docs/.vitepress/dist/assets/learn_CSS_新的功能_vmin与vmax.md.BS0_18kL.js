import{_ as s,c as i,o as a,a2 as n}from"./chunks/framework.Bbmmfjgb.js";const v=JSON.parse('{"title":"vmin与vmax","description":"","frontmatter":{},"headers":[],"relativePath":"learn/CSS/新的功能/vmin与vmax.md","filePath":"learn/CSS/新的功能/vmin与vmax.md","lastUpdated":1704114739000}'),t={name:"learn/CSS/新的功能/vmin与vmax.md"},e=n(`<h1 id="vmin与vmax" tabindex="-1">vmin与vmax <a class="header-anchor" href="#vmin与vmax" aria-label="Permalink to &quot;vmin与vmax&quot;">​</a></h1><p>在做移动端项目时，经常有一个要求是某张图片必须是全屏展示，且不能出现滚动条。这就说明这张图片必须是占满视口最短边。</p><p>CSS 新单位可以很优雅解决这一点，其中：</p><ul><li>vmin 表示该元素取视口最短那条边</li><li>vmax 表示该元素取视口最长那条边</li></ul><p>代码如下：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vmin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vmin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>此时图片取视口相对最短的边，移动端上横向比纵向短，因此取横向距离。</p><p>这样就能够实现效果了。</p>`,8),l=[e];function p(h,k,r,d,c,m){return a(),i("div",null,l)}const _=s(t,[["render",p]]);export{v as __pageData,_ as default};
