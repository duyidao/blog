import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.2ee92742.js";const F=JSON.parse('{"title":"Vue项目打包后首页一片空白解决办法和具体原因总结","description":"","frontmatter":{},"headers":[],"relativePath":"learn/杂技拾谈/Vue/vue项目打包后首页白屏总结.md","filePath":"learn/杂技拾谈/Vue/vue项目打包后首页白屏总结.md","lastUpdated":null}'),l={name:"learn/杂技拾谈/Vue/vue项目打包后首页白屏总结.md"},o=p(`<h1 id="vue项目打包后首页一片空白解决办法和具体原因总结" tabindex="-1">Vue项目打包后首页一片空白解决办法和具体原因总结 <a class="header-anchor" href="#vue项目打包后首页一片空白解决办法和具体原因总结" aria-label="Permalink to &quot;Vue项目打包后首页一片空白解决办法和具体原因总结&quot;">​</a></h1><h2 id="打包后的dist目录下的文件引用路径不对" tabindex="-1">打包后的dist目录下的文件引用路径不对 <a class="header-anchor" href="#打包后的dist目录下的文件引用路径不对" aria-label="Permalink to &quot;打包后的dist目录下的文件引用路径不对&quot;">​</a></h2><p><code>vue</code> 项目中，<code>public</code> 内的文件是不会打包直接放入 <code>dist</code> 文件夹根目录内，其余文件编译后放入对应的文件夹内，如 <code>css</code> 、<code>js</code> 、<code>img</code> 文件夹。</p><p>字段 <code>publicPath</code> 就是打包后静态资源的路径。不设置或者设置为 <code>/</code> 则是绝对路径，以根目录为基准路径进行拼接，例如：</p><p><img src="https://i.328888.xyz/2023/04/27/i9fztc.png" alt="i9fztc.png"></p><p>而部署的文件夹根目录没有 <code>js</code> 文件，该 <code>js</code> 文件夹都在部署好的 <code>dist</code> 文件夹内，因此找不到资源文件。</p><p>设置为 <code>./</code> 则改为 <strong>相对路径</strong> ，以打包好的 <code>dist</code> 文件为根路径，选择其根目录下的 <code>js</code> 文件，例如：</p><p><img src="https://i.328888.xyz/2023/04/27/i9yyvF.png" alt="i9yyvF.png"></p><p><img src="https://i.328888.xyz/2023/04/27/i9yDIQ.png" alt="i9yDIQ.png"></p><p>此时能够访问到资源，页面也能正常渲染，说明 <code>publicPath</code> 当前目录即打包后的 <code>index.html</code> 的当前目录，即 <code>dist</code> 目录。</p><p>可以通过另外一个例子证明 “ <code>dist</code> 目录是根目录”，把 <code>publicPath</code> 设为 <code>../</code> ，打包后效果如下：</p><p><img src="https://i.328888.xyz/2023/04/27/i9AHGV.png" alt="i9AHGV.png"></p><p>最后，放上简单版项目打包配置：</p><ul><li><p><code>publicPath</code> ：打包根路径</p></li><li><p><code>outputDir</code> ：打包后文件夹名称，默认为 <code>dist</code></p></li><li><p><code>productionSourceMap</code> ：打包后每个js文件都有一个map文件</p><p><code>map</code> 文件的作用：项目打包后，代码都是经过压缩加密的，如果运行时报错，输出的错误信息无法准确得知是哪里的代码报错。 有了 <code>map</code> 就可以像未加密的代码一样，准确的输出是哪一行哪一列有错。</p><p>改成 <code>false</code> 后 所有打包生成的 <code>map</code> 文件都没有了，大大减小打包包体积。</p></li><li><p><code>disableHostCheck</code> ：<code>Vue</code> 项目 <code>invalid host header</code> 报错。</p><blockquote><p>注意：</p><p>在 <code>webpack 5</code> 中 <code>disableHostCheck</code> 应该被遗弃了，需将</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">disableHostCheck</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">disableHostCheck</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">true</span></span></code></pre></div><p>替换为</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">historyApiFallback</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#B392F0;">allowedHosts</span><span style="color:#E1E4E8;">: “all”,</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">historyApiFallback</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#6F42C1;">allowedHosts</span><span style="color:#24292E;">: “all”,</span></span></code></pre></div></blockquote></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;path&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">dir</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(__dirname, dir)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// vue.config.js</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  publicPath: </span><span style="color:#9ECBFF;">&#39;./&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  outputDir: </span><span style="color:#9ECBFF;">&#39;client&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  productionSourceMap: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  devServer: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    disableHostCheck: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;path&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(</span><span style="color:#E36209;">dir</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(__dirname, dir)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// vue.config.js</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  publicPath: </span><span style="color:#032F62;">&#39;./&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  outputDir: </span><span style="color:#032F62;">&#39;client&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  productionSourceMap: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  devServer: {</span></span>
<span class="line"><span style="color:#24292E;">    disableHostCheck: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="路由模式" tabindex="-1">路由模式 <a class="header-anchor" href="#路由模式" aria-label="Permalink to &quot;路由模式&quot;">​</a></h2><p><code>Vue</code> 打包默认是哈希模式 <code>hash</code> ，如果改为 <code>history</code> 历史模式，则需要服务器端加上一个覆盖所有情况的候选资源；如果 <code>URL</code> 匹配不到任何静态资源，则返回一个依赖页面 <code>index.html</code> 。</p><h2 id="高级语法无法编译" tabindex="-1">高级语法无法编译 <a class="header-anchor" href="#高级语法无法编译" aria-label="Permalink to &quot;高级语法无法编译&quot;">​</a></h2><p>部分低端浏览器无法适应高级 <code>es6</code> 语法，因此报错。解决方法：</p><ol><li><p>安装 <code>babel</code> 依赖</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev babel</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">preset</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">es2015</span></span>
<span class="line"><span style="color:#E1E4E8;">npm install </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev babel</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">preset</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">stage</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev babel</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">preset</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">es2015</span></span>
<span class="line"><span style="color:#24292E;">npm install </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev babel</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">preset</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">stage</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">3</span></span></code></pre></div></li><li><p>创建 <code>.babelrc</code> 文件，配置转码规则（即把 <code>es6</code> 高级语法转为 <code>es5</code> 语法）</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 此项指明，转码的规则</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;presets&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// env项是借助插件babel-preset-env，下面这个配置说的是babel对es6,es7,es8进行转码，并且设置amd,commonjs这样的模块化文件，不进行转码</span></span>
<span class="line"><span style="color:#E1E4E8;">		[</span><span style="color:#9ECBFF;">&quot;env&quot;</span><span style="color:#E1E4E8;">, { </span><span style="color:#9ECBFF;">&quot;modules&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> }],</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 下面这个是不同阶段出现的es语法，包含不同的转码插件</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#9ECBFF;">&quot;stage-2&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	],</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 下面这个选项是引用插件来处理代码的转换，transform-runtime用来处理全局函数和优化babel编译</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;plugins&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;transform-runtime&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 下面指的是在生成的文件中，不产生注释</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;comments&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 下面这段是在特定的环境中所执行的转码规则，当环境变量是下面的test就会覆盖上面的设置</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;env&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// test 是提前设置的环境变量，如果没有设置BABEL_ENV则使用NODE_ENV，如果都没有设置默认就是development</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;presets&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;env&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;stage-2&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#6A737D;">// instanbul是一个用来测试转码后代码的工具</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;plugins&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;istanbul&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 此项指明，转码的规则</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;presets&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// env项是借助插件babel-preset-env，下面这个配置说的是babel对es6,es7,es8进行转码，并且设置amd,commonjs这样的模块化文件，不进行转码</span></span>
<span class="line"><span style="color:#24292E;">		[</span><span style="color:#032F62;">&quot;env&quot;</span><span style="color:#24292E;">, { </span><span style="color:#032F62;">&quot;modules&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> }],</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 下面这个是不同阶段出现的es语法，包含不同的转码插件</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#032F62;">&quot;stage-2&quot;</span></span>
<span class="line"><span style="color:#24292E;">	],</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 下面这个选项是引用插件来处理代码的转换，transform-runtime用来处理全局函数和优化babel编译</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;plugins&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;transform-runtime&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 下面指的是在生成的文件中，不产生注释</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;comments&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 下面这段是在特定的环境中所执行的转码规则，当环境变量是下面的test就会覆盖上面的设置</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;env&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// test 是提前设置的环境变量，如果没有设置BABEL_ENV则使用NODE_ENV，如果都没有设置默认就是development</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;presets&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;env&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;stage-2&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6A737D;">// instanbul是一个用来测试转码后代码的工具</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;plugins&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;istanbul&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></li></ol>`,20),e=[o];function t(c,r,E,y,i,d){return a(),n("div",null,e)}const h=s(l,[["render",t]]);export{F as __pageData,h as default};
